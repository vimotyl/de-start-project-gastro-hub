/* Задание 6 */
/* обновить цены на капучино */

/* - обновление будем выполнять в виде транзации
 * - установим блокировку не всей таблицы, а только строк
 * с ресторанами, в которых продают капучино
 * - установим тип блокировки строк FOR NO KEY UPDATE,
 * который позволит изменять только неключевые поля
 * и защитит от параллельного изменения / удаления
 * этих строк в другой транзакции
 * - при этом читать эти строки в другой транзакции можно
 * - а остальные строки (с ресторанами без капучно в меню)
 * можно как читать, так и изменяь в другой транзакции */

BEGIN;

/* блокируем строки в таблице restaurants с теми ресторанами,
 * у которых в меню есть капучино, остальные строки не блокируем */
SELECT
	*
FROM cafe.restaurants
WHERE menu #>> '{Кофе, Капучино}' IS NOT NULL
FOR NO KEY UPDATE;


WITH
/* рассчитали новую стомость капучино (+20%) в каждом ресторане */
new_cofee_prices AS (
	SELECT
		restaurant_uuid,
		name,
		CAST(ROUND((menu #>> '{Кофе, Капучино}')::NUMERIC * 1.2, 2) AS TEXT) AS new_price
	FROM cafe.restaurants
	WHERE menu #>> '{Кофе, Капучино}' IS NOT NULL
)
/* обновили стоимость в таблице */
UPDATE cafe.restaurants r
SET menu = JSONB_SET(r.menu::jsonb, '{"Кофе", "Капучино"}', n.new_price::jsonb)
FROM new_cofee_prices n
WHERE n.restaurant_uuid = r.restaurant_uuid;

COMMIT;
